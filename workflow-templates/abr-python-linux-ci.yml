# Install Python dependencies
# Lint with flake8, mypy, and isort. Fails on any errors.
# Test with pytest

name: ABR - Python - Linux - CI

on:
  push:
    # main = default top-level branch name, master = deprecated name
    # run CI on every branch push except top-level
    branches-ignore:
      - master
      - main
  pull_request:
    branches:
      - master
      - main
  # allow running workflow manually
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.x
      uses: actions/setup-python@v2
      with:
        # pulls latest version of python, alternatively specify exact version (i.e. 3.8 -> no quotes)
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install setuptools wheel
        python -m pip install flake8 mypy pytest isort
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        # pip install git+https://adamiani:${{ secrets.GH_ACCESS_TOKEN }}@github.com/adamiani-abr/email_helpers.git
        # pip install git+https://adamiani:${{ secrets.GH_ACCESS_TOKEN }}@github.com/adamiani-abr/ftp_workflows.git
    - name: Lint with flake8
      run: |
        # fail if there are any flake8 errors
        flake8 . --count --max-complexity=15 --max-line-length=127 --statistics
    - name: Lint with mypy
      run: |
        # no recursive flag for mypy, so have to manually find all .py files in dir
        # linux will fail with error code 123 on mypy errors, so need for assignment as done in windows
        # --ignore-missing-imports: ignore all missing imports
        # --disallow-untyped-defs: function definition without type annotations
        # --disallow-untyped-calls: function with type annotations calls a function defined without annotations
        # --disallow-incomplete-defs: partly annotated function definition
        # --show-error-codes:  add an error code to error messages
        # --raise-exceptions: raise exception on fatal error
        find . -name "*.py" | xargs mypy --ignore-missing-imports --disallow-untyped-defs --disallow-incomplete-defs --show-error-codes --raise-exceptions
    - name: Lint with isort
      run: |
        # isort doesn't return error code, so have to manually check for 'import' or 'from' in return string
        # --diff: Prints a diff of all the changes isort would make to a file, instead of changing it in place
        isort_errors=$(isort . --diff)
        if [[ $isort_errors == *"import"* ]] || [[ $isort_errors == *"from"* ]]; then
            echo "$isort_errors";
            exit 1;
        fi
    - name: Test with pytest
      run: |
        if [ -f tests/ ]; then python -m pytest; fi
